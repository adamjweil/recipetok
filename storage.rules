rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    match /user_avatars/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    match /video_thumbnails/{videoId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /videos/{videoId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Default rule
    match /{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}

service cloud.firestore {
  match /databases/{database}/documents {
    // User document rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
      
      // Allow access to all subcollections under user document
      match /{allSubcollections=**} {
        allow read: if request.auth != null && request.auth.uid == userId;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Video document rules
    match /videos/{videoId} {
      allow read: if request.auth != null;
      allow update: if request.auth != null;  // Allow updates for view counts
      allow create, delete: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      match /{allSubcollections=**} {
        allow read: if request.auth != null;
        allow write: if request.auth != null;
      }
    }
  }
}
